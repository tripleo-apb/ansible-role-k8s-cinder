---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: {{ privileged_service_account }}
  namespace: {{ namespace }}
roleRef:
  kind: ClusterRole
  name: {{ privileged_service_account }}
subjects:
  - kind: ServiceAccount
    name: {{ privileged_service_account }}
    namespace: {{ namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: {{ service_account }
  namespace: {{ namespace }}
roleRef:
  kind: ClusterRole
  name: {{ service_account }}
subjects:
  - kind: ServiceAccount
    name: {{ service_account }}
    namespace: {{ namespace }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ app_name }}
  namespace: {{ namespace }}
spec:
  ports:
  - port: 8776
  selector:
    app: {{ app_name }}
  clusterIP: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ app_name }}
  name: cinder-api
  namespace: {{ namespace }}
data:
  cinder.conf: |
    [DEFAULT]
    enable_v3_api = true
    glance_api_servers = none
    enabled_backends = tripleo_ceph
    glance_api_version = 2
    log_dir = /var/log/cinder
    osapi_volume_listen = 0.0.0.0
    scheduler_driver = cinder.scheduler.filter_scheduler.FilterScheduler
    nova_catalog_info = compute:nova:internalURL
    api_paste_config = /etc/cinder/api-paste.ini
    transport_url = rabbit://guest:{{ rabbitmq_password }}@rabbitmq:5672/?ssl=0
    public_bind_host = 0.0.0.0
    auth_strategy = noauth

    [oslo_messaging_notifications]
    transport_url = rabbit://guest:{{ rabbitmq_password }}@rabbitmq:5672/?ssl=0
    driver = messagingv2

    [database]
    db_max_retries = -1
    host = mariadb
    max_retries = -1
    connection = mysql+pymysql://{{ mariadb_root_user }}:{{ mariadb_root_password }}@mariadb:3306/cinder
    user = cinder
    password = {{ cinder_password }}
    dbname = cinder

    [oslo_concurrency]
    lock_path = /var/lib/cinder/tmp

    [oslo_policy]
    policy_file = /etc/cinder/policy.json

    [tripleo_ceph]
    rbd_ceph_conf = /etc/ceph/ceph.conf
    volume_backend_name = tripleo_ceph
    volume_driver = cinder.volume.drivers.rbd.RBDDriver
    rbd_pool = cinder_volumes
    rbd_user = cinder

    [privsep_entrypoint]
    helper_command = sudo cinder-rootwrap /etc/cinder/rootwrap.conf privsep-helper --config-file /etc/cinder/cinder.conf

  cinder-wsgi.conf: |
    Listen 0.0.0.0:8776

    TraceEnable off

    <VirtualHost *:8776>
        WSGIDaemonProcess cinder-api processes=5 threads=1 user=cinder group=cinder display-name=%{GROUP} python-path=/usr/lib/python2.7/site-packages
        WSGIProcessGroup cinder-api
        WSGIScriptAlias / /var/www/cgi-bin/cinder/cinder-wsgi
        WSGIApplicationGroup %{GLOBAL}
        WSGIPassAuthorization On
        <IfVersion >= 2.4>
          ErrorLogFormat "%{cu}t %M"
        </IfVersion>
        ErrorLog /var/log/kolla/cinder/cinder-api.log
        LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b %D \"%{Referer}i\" \"%{User-Agent}i\"" logformat
        CustomLog /var/log/kolla/cinder/cinder-api-access.log logformat
    </VirtualHost>
  config.json: |
    {
        "command": "httpd -DFOREGROUND",
        "config_files": [
            {
                "source": "/var/lib/kolla/config_files/cinder-wsgi.conf",
                "dest": "/etc/httpd/conf.d/cinder-wsgi.conf",
                "owner": "cinder",
                "perm": "0600"
            },
            {
                "source": "/var/lib/kolla/config_files/cinder.conf",
                "dest": "/etc/cinder/cinder.conf",
                "owner": "cinder",
                "perm": "0600"
            }
        ],
        "permissions": [
            {
                "path": "/var/lib/cinder",
                "owner": "cinder:cinder",
                "recurse": true
            },
            {
                "path": "/var/log/kolla/cinder",
                "owner": "cinder:cinder",
                "recurse": true
            }
        ]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ app_name }}
  name: cinder-scheduler
  namespace: {{ namespace }}
data:
  cinder.conf: |
    [DEFAULT]
    enable_v3_api = true
    glance_api_servers = none
    enabled_backends = tripleo_ceph
    glance_api_version = 2
    log_dir = /var/log/cinder
    osapi_volume_listen = 0.0.0.0
    scheduler_driver = cinder.scheduler.filter_scheduler.FilterScheduler
    nova_catalog_info = compute:nova:internalURL
    api_paste_config = /etc/cinder/api-paste.ini
    transport_url = rabbit://guest:{{ rabbitmq_password }}@rabbitmq:5672/?ssl=0
    public_bind_host = 0.0.0.0
    auth_strategy = noauth

    [oslo_messaging_notifications]
    transport_url = rabbit://guest:{{ rabbitmq_password }}@rabbitmq:5672/?ssl=0
    driver = messagingv2

    [database]
    db_max_retries = -1
    host = mariadb
    max_retries = -1
    connection = mysql+pymysql://{{ mariadb_root_user }}:{{ mariadb_root_password }}@mariadb:3306/cinder
    user = cinder
    password = {{ cinder_password }}
    dbname = cinder

    [oslo_concurrency]
    lock_path = /var/lib/cinder/tmp

    [oslo_policy]
    policy_file = /etc/cinder/policy.json

    [tripleo_ceph]
    rbd_ceph_conf = /etc/ceph/ceph.conf
    volume_backend_name = tripleo_ceph
    volume_driver = cinder.volume.drivers.rbd.RBDDriver
    rbd_pool = cinder_volumes
    rbd_user = cinder

    [privsep_entrypoint]
    helper_command = sudo cinder-rootwrap /etc/cinder/rootwrap.conf privsep-helper --config-file /etc/cinder/cinder.conf

  config.json: |
    {
        "command": "cinder-scheduler --config-file /var/lib/kolla/config_files/cinder.conf",
        "config_files": [
            {
                "source": "/var/lib/kolla/config_files/cinder.conf",
                "dest": "/etc/cinder/cinder.conf",
                "owner": "cinder",
                "perm": "0600"
            }
        ],
        "permissions": [
            {
                "path": "/var/lib/cinder",
                "owner": "cinder:cinder",
                "recurse": true
            },
            {
                "path": "/var/log/kolla/cinder",
                "owner": "cinder:cinder",
                "recurse": true
            }
        ]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ app_name }}
  name: cinder-volume-ceph
  namespace: {{ namespace }}
data:
  cinder.conf: |
    [DEFAULT]
    enable_v3_api = true
    glance_api_servers = none
    enabled_backends = tripleo_ceph
    glance_api_version = 2
    log_dir = /var/log/cinder
    osapi_volume_listen = 0.0.0.0
    scheduler_driver = cinder.scheduler.filter_scheduler.FilterScheduler
    nova_catalog_info = compute:nova:internalURL
    api_paste_config = /etc/cinder/api-paste.ini
    transport_url = rabbit://guest:{{ rabbitmq_password }}@rabbitmq:5672/?ssl=0
    public_bind_host = 0.0.0.0
    auth_strategy = noauth

    [oslo_messaging_notifications]
    transport_url = rabbit://guest:{{ rabbitmq_password }}@rabbitmq:5672/?ssl=0
    driver = messagingv2

    [database]
    db_max_retries = -1
    host = mariadb
    max_retries = -1
    connection = mysql+pymysql://{{ mariadb_root_user }}:{{ mariadb_root_password }}@mariadb:3306/cinder
    user = cinder
    password = {{ cinder_password }}
    dbname = cinder

    [oslo_concurrency]
    lock_path = /var/lib/cinder/tmp

    [oslo_policy]
    policy_file = /etc/cinder/policy.json

    [tripleo_ceph]
    rbd_ceph_conf = /etc/ceph/ceph.conf
    volume_backend_name = tripleo_ceph
    volume_driver = cinder.volume.drivers.rbd.RBDDriver
    rbd_pool = cinder_volumes
    rbd_user = cinder

    [privsep_entrypoint]
    helper_command = sudo cinder-rootwrap /etc/cinder/rootwrap.conf privsep-helper --config-file /etc/cinder/cinder.conf

  config.json: |
    {
        "command": "cinder-volume --config-file /etc/cinder/cinder.conf",
        "config_files": [
            {
                "source": "/var/lib/kolla/config_files/cinder.conf",
                "dest": "/etc/cinder/cinder.conf",
                "owner": "cinder",
                "perm": "0600"
            },
            {
                "source": "/var/lib/kolla/config_files/ceph.*",
                "dest": "/etc/ceph/",
                "owner": "cinder",
                "perm": "0700",
                "optional": true
            },
            {
                "source": "/var/lib/kolla/config_files/ceph.conf",
                "dest": "/etc/ceph/ceph.conf",
                "owner": "cinder",
                "perm": "0600",
                "optional": true
            }
        ],
        "permissions": [
            {
                "path": "/var/lib/cinder",
                "owner": "cinder:cinder",
                "recurse": true
            },
            {
                "path": "/var/log/kolla/cinder",
                "owner": "cinder:cinder",
                "recurse": true
            }
        ]
    }

---
apiVersion: batch/v1
kind: Job
metadata:
  name: cinder-create-db
  namespace: {{ namespace }}
spec:
  template:
    spec:
      containers:
      - name: cinder-create-db
        image: tripleoupstream/centos-binary-kolla-toolbox:latest
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
          - ansible localhost -m mysql_db -a
            "login_host=mariadb
             login_port=3306
             login_user={{ mariadb_root_user }}
             login_password=$DATABASE_PASSWORD
             name={{ cinder_user }}"
        env:
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cinder-secrets
              key: mariadb-root-password
        - name: TZ
          ###value: UTC
      serviceAccount: {{ service_account }}
      serviceAccountName: {{ service_account }}
      restartPolicy: OnFailure 
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cinder-db-sync
  namespace: {{ namespace }}
spec:
  template:
    spec:
      containers:
      - name: cinder-db-sync
        image: tripleoupstream/centos-binary-cinder-api:latest
        imagePullPolicy: "IfNotPresent"
        env:
        - name: KOLLA_KUBERNETES
        - name: KOLLA_BOOTSTRAP
        - name: KOLLA_CONFIG_STRATEGY
          value: COPY_ONCE
        - name: TZ
          value: UTC
        volumeMounts:
        - mountPath: /var/lib/kolla/config_files/
          name: kolla-config
      serviceAccount: {{ service_account }}
      serviceAccountName: {{ service_account }}
      restartPolicy: OnFailure
      volumes:
      - configMap:
          name: cinder-scheduler
        name: kolla-config

---
apiVersion: batch/v1
kind: Job
metadata:
  name: cinder-create-user
  namespace: {{ namespace }}
spec:
  template:
    spec:
      containers:
      - name: cinder-create-db
        image: tripleoupstream/centos-binary-kolla-toolbox:latest
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
        - ansible localhost -m mysql_user -a "login_host=mariadb login_port=3306
          login_user=root login_password=$DATABASE_PASSWORD name=cinder password=$CINDER_DATABASE_PASSWORD
          host='%' priv='cinder.*:ALL' append_privs='yes'"
        env:
        - name: CINDER_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cinder-secrets
              key: cinder-password
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cinder-secrets
              key: mariadb-root-password
        - name: TZ
          value: UTC
      serviceAccount: {{ service_account }}
      serviceAccountName: {{ service_account }}
      restartPolicy: OnFailure
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cinder-api
  namespace: {{ namespace }}
spec:
  replicas: 1
  serviceName: cinder
  selector:
    matchLabels:
      app: cinder
  template:
    metadata:
      labels:
        app: cinder
    spec:
      serviceAccount: {{ service_account }}
      serviceAccountName: {{ service_account }}
      initContainers:
      - name: updated-config
        image: tripleoupstream/centos-binary-kolla-toolbox
        imagePullPolicy: "IfNotPresent"
        command:
          - /bin/sh
          - -c
          - |
            cp -a /srv/configmap/..data/* /srv/pod-main-config/;
            CONF=/srv/pod-main-config/cinder.conf;
            crudini --set $CONF DEFAULT transport_url rabbit://guest:$RABBITMQ_PASSWORD@rabbitmq:5672/?ssl=0;
            crudini --set $CONF oslo_messaging_notifications transport_url rabbit://guest:$RABBITMQ_PASSWORD@rabbitmq:5672/?ssl=0;
            crudini --set $CONF database connection mysql+pymysql://root:$DB_ROOT_PASSWORD@mariadb:3306/cinder;
            crudini --set $CONF database password $CINDER_PASSWORD;
        env:
        - name: DB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cinder-secrets
              key: mariadb-root-password
        - name: CINDER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cinder-secrets
              key: cinder-password
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cinder-secrets
              key: rabbitmq-password

        volumeMounts:
         - name: template-config
           mountPath: /srv/configmap
         - name: final-config
           mountPath: /srv/pod-main-config

      containers:
      - image: tripleoupstream/centos-binary-cinder-api:latest
        imagePullPolicy: "IfNotPresent"
        name: cinder-api
        env:
        - name: TZ
          value: UTC
        - name: KOLLA_CONFIG_STRATEGY
          value: COPY_ALWAYS
        - name: KOLLA_KUBERNETES
          value: ""
        ports:
        - containerPort: 8776
          name: cinder-api
        volumeMounts:
        - mountPath: /var/lib/kolla/config_files/
          name: final-config
      restartPolicy: Always
      serviceAccount: {{ service_account }}
      serviceAccountName: {{ service_account }}
      volumes:
      - configMap:
          name: cinder-api
        name: template-config
      - name: final-config
        emptyDir: {}
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cinder-scheduler
  namespace: {{ namespace }}
spec:
  replicas: 1
  serviceName: cinder
  selector:
    matchLabels:
      app: cinder
  template:
    metadata:
      labels:
        app: cinder
    spec:
      serviceAccount: {{ service_account }}
      serviceAccountName: {{ service_account }}
      initContainers:
      - name: updated-config
        image: tripleoupstream/centos-binary-kolla-toolbox
        imagePullPolicy: "IfNotPresent"
        command:
          - /bin/sh
          - -c
          - |
            cp -a /srv/configmap/..data/* /srv/pod-main-config/;
            CONF=/srv/pod-main-config/cinder.conf;
            crudini --set $CONF DEFAULT transport_url rabbit://guest:$RABBITMQ_PASSWORD@rabbitmq:5672/?ssl=0;
            crudini --set $CONF oslo_messaging_notifications transport_url rabbit://guest:$RABBITMQ_PASSWORD@rabbitmq:5672/?ssl=0;
            crudini --set $CONF database connection mysql+pymysql://root:$DB_ROOT_PASSWORD@mariadb:3306/cinder;
            crudini --set $CONF database password $CINDER_PASSWORD;
        env:
        - name: DB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cinder-secrets
              key: mariadb-root-password
        - name: CINDER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cinder-secrets
              key: cinder-password
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cinder-secrets
              key: rabbitmq-password

        volumeMounts:
         - name: template-config
           mountPath: /srv/configmap
         - name: final-config
           mountPath: /srv/pod-main-config

      containers:
      - image: tripleoupstream/centos-binary-cinder-scheduler:latest
        imagePullPolicy: "IfNotPresent"
        name: cinder-api
        env:
        - name: TZ
          value: UTC
        - name: KOLLA_CONFIG_STRATEGY
          value: COPY_ALWAYS
        - name: KOLLA_KUBERNETES
          value: ""
        volumeMounts:
        - name: final-config
          mountPath: /var/lib/kolla/config_files/
      restartPolicy: Always
      serviceAccount: {{ service_account }}
      serviceAccountName: {{ service_account }}
      volumes:
      - configMap:
          name: cinder-scheduler
        name: template-config
      - name: final-config
        emptyDir: {}
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cinder-volume-ceph
  namespace: {{ namespace }}
spec:
  replicas: 1
  serviceName: cinder
  selector:
    matchLabels:
      app: cinder
  template:
    metadata:
      labels:
        app: cinder
    spec:
      serviceAccount: {{ service_account }}
      serviceAccountName: {{ service_account }}
      initContainers:
      - name: updated-config
        image: tripleoupstream/centos-binary-kolla-toolbox
        imagePullPolicy: "IfNotPresent"
        command:
          - /bin/sh
          - -c
          - |
            cp -a /srv/configmap/..data/* /srv/pod-main-config/;
            cp -a /srv/ceph/..data/* /srv/pod-main-config/;
            CONF=/srv/pod-main-config/cinder.conf;
            crudini --set $CONF DEFAULT transport_url rabbit://guest:$RABBITMQ_PASSWORD@rabbitmq:5672/?ssl=0;
            crudini --set $CONF oslo_messaging_notifications transport_url rabbit://guest:$RABBITMQ_PASSWORD@rabbitmq:5672/?ssl=0;
            crudini --set $CONF database connection mysql+pymysql://root:$DB_ROOT_PASSWORD@mariadb:3306/cinder;
            crudini --set $CONF database password $CINDER_PASSWORD;
        env:
        - name: DB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cinder-secrets
              key: mariadb-root-password
        - name: CINDER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cinder-secrets
              key: cinder-password
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cinder-secrets
              key: rabbitmq-password

        volumeMounts:
         - name: template-config
           mountPath: /srv/configmap
         - name: final-config
           mountPath: /srv/pod-main-config
         - name: ceph-secrets
           mountPath: /srv/ceph
      containers:
      - image: tripleoupstream/centos-binary-cinder-volume:latest
        imagePullPolicy: "IfNotPresent"
        name: cinder-volume
        env:
        - name: TZ
          value: UTC
        - name: KOLLA_CONFIG_STRATEGY
          value: COPY_ALWAYS
        - name: KOLLA_KUBERNETES
          value: ""
        volumeMounts:
        - name: final-config
          mountPath: /var/lib/kolla/config_files/
      volumes:
        - name: template-config
          configMap:
            name: cinder-volume-ceph
        - name: final-config
          emptyDir: {}
        - name: ceph-secrets
          secret:
            secretName: ceph-secrets

